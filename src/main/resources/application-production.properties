# Production Configuration with AWS Secrets Manager and Parameter Store

# AWS Configuration
spring.cloud.aws.region.static=${AWS_REGION:mx-central-1}
spring.cloud.aws.credentials.use-default-aws-credentials-chain=true

# Secrets Manager Configuration
spring.cloud.aws.secrets.enabled=true
spring.cloud.aws.secrets.name=umc-sp-contents-secrets
spring.cloud.aws.secrets.fail-fast=true

# Parameter Store Configuration
spring.cloud.aws.paramstore.enabled=true
spring.cloud.aws.paramstore.prefix=/umc-sp-contents/production
spring.cloud.aws.paramstore.fail-fast=true

# Database Configuration - Using Parameter Store values
spring.datasource.url=${/umc-sp-contents/production/database/url}
spring.datasource.username=${/umc-sp-contents/production/database/username}
spring.datasource.password=${/umc-sp-contents/production/database/password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=umc_sp

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.default-schema=umc_sp
spring.flyway.schemas=umc_sp
spring.flyway.create-schemas=false

# Server Configuration
server.port=8082

# Production Logging
logging.level.org.springframework.web=INFO
logging.level.com.umc.sp.contents=INFO
logging.level.org.flywaydb=INFO

# Content URLs for Production
content.resource.videos.url=https://d2j8po7lvypbe5.cloudfront.net/content/videos/%s/
content.assets.videos.url=https://d2j8po7lvypbe5.cloudfront.net/assets/videos/%s/images/
content.assets.series.url=https://d2j8po7lvypbe5.cloudfront.net/assets/series/%s/images/
content.assets.experts.url=https://d2j8po7lvypbe5.cloudfront.net/assets/experts/%s/images/

# Swagger Configuration for Production
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true

# HikariCP Configuration for Production
# Optimized for high performance and concurrency
spring.datasource.hikari.pool-name=UMC-Contents-Prod-Pool
# Minimum number of idle connections (recommended: same as initial traffic load)
spring.datasource.hikari.minimum-idle=10
# Maximum number of connections (tune based on database max_connections)
spring.datasource.hikari.maximum-pool-size=20
# IMPORTANT: auto-commit=true prevents 'idle in transaction' blocking issues
spring.datasource.hikari.auto-commit=true
# Connection timeout - fail fast if pool is exhausted (30 seconds)
spring.datasource.hikari.connection-timeout=30000
# How long a connection can be idle (10 minutes)
spring.datasource.hikari.idle-timeout=600000
# Maximum lifetime of a connection (30 minutes - must be less than database timeout)
spring.datasource.hikari.max-lifetime=1800000
# Validate connections with this query
spring.datasource.hikari.connection-test-query=SELECT 1
# Detect connection leaks in production (60 seconds)
spring.datasource.hikari.leak-detection-threshold=60000

# Security Configuration - OAuth2 Resource Server with AWS Cognito
# CRITICAL: Security MUST be enabled in production
umc.security.enabled=true

# AWS Cognito Configuration for Production
# NOTE: Cognito is in us-east-1 (not available in mx-central-1)
# Values MUST be provided via Parameter Store in production
spring.security.oauth2.resourceserver.jwt.issuer-uri=${/umc-sp-contents/production/cognito/issuer-uri}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${/umc-sp-contents/production/cognito/jwk-set-uri}

# JWT Configuration - Audience is the Cognito App Client ID
spring.security.oauth2.resourceserver.jwt.audiences=${/umc-sp-contents/production/jwt/audiences}

# Security Development Mode - DISABLED in production
umc.security.development-mode=false

# CORS Configuration for Production
# Restrictive - only allow specific origins
umc.cors.allowed-origins=${/umc-sp-contents/production/cors/allowed-origins}
umc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
umc.cors.allowed-headers=Authorization,Content-Type,Accept
umc.cors.allow-credentials=true
umc.cors.max-age=3600
