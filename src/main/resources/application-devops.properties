# DevOps Configuration - Optimized for containerized deployment and CI/CD
# This profile is designed for Docker containers, Kubernetes, and CI/CD pipelines
# It supports multiple target environments through environment variables

# AWS Configuration - Flexible for different deployment targets
spring.cloud.aws.region.static=${AWS_REGION:us-east-1}
spring.cloud.aws.credentials.use-default-aws-credentials-chain=${USE_AWS_DEFAULT_CREDENTIALS:true}
spring.cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID:}
spring.cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY:}

# Secrets Manager Configuration - Environment-driven
spring.cloud.aws.secrets.enabled=${USE_AWS_SECRETS:false}
spring.cloud.aws.secrets.name=${AWS_SECRETS_NAME:umc-sp-contents-secrets-devops}
spring.cloud.aws.secrets.fail-fast=${AWS_SECRETS_FAIL_FAST:false}

# Parameter Store Configuration - Environment-driven
spring.cloud.aws.paramstore.enabled=${USE_AWS_PARAMETERS:false}
spring.cloud.aws.paramstore.prefix=${AWS_PARAMETER_PREFIX:/umc-sp-contents/devops}
spring.cloud.aws.paramstore.fail-fast=${AWS_PARAMETERS_FAIL_FAST:false}

# Database Configuration - Environment-driven
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://stagingdb-contents.c5mswui4q6ul.mx-central-1.rds.amazonaws.com:5432/stagingdb-contents}
spring.datasource.username=${DATABASE_USERNAME:umcAdmin}
spring.datasource.password=${DATABASE_PASSWORD:TempPassword123$}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Flyway Configuration
spring.flyway.enabled=${SPRING_FLYWAY_ENABLED:true}

# Server Configuration
server.port=${SERVER_PORT:8082}
server.address=0.0.0.0

# Logging Configuration for Docker
logging.level.org.springframework.web=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:INFO}
logging.level.com.umc.sp.contents=${LOGGING_LEVEL_COM_UMC_SP_CONTENTS:INFO}
logging.level.org.springframework.cloud.aws=${LOGGING_LEVEL_AWS:INFO}
logging.level.software.amazon.awssdk=${LOGGING_LEVEL_AWS_SDK:WARN}
logging.level.org.flywaydb=${LOGGING_LEVEL_FLYWAY:INFO}

# Container optimizations
spring.jmx.enabled=false
spring.main.lazy-initialization=false

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.health.defaults.enabled=true
management.health.ping.enabled=true
management.health.diskspace.enabled=true
management.metrics.export.prometheus.enabled=true

# DevTools disabled in container
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# Content URLs for DevOps - Environment-driven with AWS support
# Supports both Secrets Manager and Parameter Store
content.resource.videos.url=${content-resource-videos-url:${CONTENT_RESOURCE_VIDEOS_URL:https://s3.amazonaws.com/umc-content-devops/content/videos/%s/}}
content.assets.videos.url=${content-assets-videos-url:${CONTENT_ASSETS_VIDEOS_URL:https://s3.amazonaws.com/umc-content-devops/assets/videos/%s/images/}}
content.assets.series.url=${content-assets-series-url:${CONTENT_ASSETS_SERIES_URL:https://s3.amazonaws.com/umc-content-devops/assets/series/%s/images/}}
content.assets.experts.url=${content-assets-experts-url:${CONTENT_ASSETS_EXPERTS_URL:https://s3.amazonaws.com/umc-content-devops/assets/experts/%s/images/}}
